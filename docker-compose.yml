version: '3.8'

services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:16-alpine
    container_name: health-tracker-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}       # Referencing .env
      POSTGRES_USER: ${POSTGRES_USER}   # Referencing .env
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # Referencing .env
    ports:
      - "${POSTGRES_PORT:-5432}:5432" # Optional: make postgres port configurable
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"] # Referencing .env
      interval: 5s
      timeout: 5s
      retries: 5

  # User Service
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: health-tracker-user-service
    restart: unless-stopped
    ports:
      - "${APP_PORT}:${APP_PORT}" # Referencing .env
    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT:-5432}/${POSTGRES_DB}?sslmode=disable" # Referencing .env, and default port
      # Removed individual DB_HOST, DB_PORT, DB_USER, DB_PASSWORD, DB_NAME if only DATABASE_URL is used by Go app
      # If your Go app still parses individual DB_HOST etc, you'd keep them and refer to .env
      PORT: ${APP_PORT} # Referencing .env
      JWT_SECRET: ${JWT_SECRET} # NEW: Referencing JWT_SECRET from .env
      APP_ENV: ${APP_ENV} # Referencing .env
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data: